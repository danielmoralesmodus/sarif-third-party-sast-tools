# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: tfsec

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: '27 8 * * 5'

jobs:
  tfsec:
    name: Run tfsec sarif report
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    steps:
      - name: Clone repo
        uses: actions/checkout@v4


          
      - name: Run tfsec
        uses: aquasecurity/tfsec-sarif-action@21ded20e8ca120cd9d3d6ab04ef746477542a608
        with:
          sarif_file: tfsec.sarif

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v3
        with:
          # Path to SARIF file relative to the root of the repository
          sarif_file: tfsec.sarif

      - name: Check for issues and print summary
        continue-on-error: true
        id: tfsec_results
        run: |
          RESULT_COUNT=$(jq '.runs[0].results | length' tfsec.sarif)
          
          if [ "$RESULT_COUNT" -gt 0 ]; then
            echo "::error::Found $RESULT_COUNT vulnerabilities. See summary below or in the 'Security' tab."
            
            # This 'jq' command creates a custom, easy-to-read report in the log
            echo "-----------------------------------------------------"
            echo "             VULNERABILITY SUMMARY"
            echo "-----------------------------------------------------"
            jq -r '.runs[0].results[] | 
              "\(.level | ascii_upcase): \(.ruleId)\n  Message: \(.message.text)\n  File: \(.locations[0].physicalLocation.artifactLocation.uri):\(.locations[0].physicalLocation.region.startLine)\n-----------------------------------------------------"' \
              tfsec.sarif

            exit 1
          else
            echo "No vulnerabilities found."
          fi
